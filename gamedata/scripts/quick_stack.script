-- Quick Stack. Made by Coloron, check out on https://github.com/ColoronX

-- Ensure SortingPlus module is available
local sp_mod = rawget(_G, "zzz_rax_sortingplus_mcm") or {}

local function cfg(key)
    return ui_mcm and ui_mcm.get("quick_stack/" .. key) or nil
end

local function key_v()
    return cfg("key_v") or DIK_keys.DIK_V
end

local function key_b()
    return cfg("key_b") or DIK_keys.DIK_B
end

local function block_fav()
    local setting = cfg("block_fav")
    return setting and setting ~= 0
end

local function block_junk()
    local setting = cfg("block_junk")
    return setting and setting ~= 0
end

local gui
local first_start = true

local function can_move(obj, from, to)
    local sec = obj:section()
    if block_fav() and type(sp_mod.is_favorite) == "function" and sp_mod.is_favorite(sec) then
        return false
    end

    if block_junk() and type(sp_mod.is_junk) == "function" and sp_mod.is_junk(sec) then
        return false
    end

    if not gui:Cond_Move(obj, from) then return false end
    if not gui.CC[to]:FindSimilar(obj, sec) then return false end
    return true
end

local function add_actions()
    gui.StackToNPC = function()
        local npc = gui:GetPartner()
        if not npc then return end
        local cc = gui.CC["actor_bag"]
        if not cc or type(cc.indx_id) ~= "table" then return end
        for id in pairs(cc.indx_id) do
            local obj = level.object_by_id(id)
            if obj and can_move(obj, "actor_bag", "npc_bag") then
                gui:Action_Move(obj, "actor_bag")
            end
        end
        gui.update_info = true
    end

    gui.StackToPlayer = function()
        local npc = gui:GetPartner()
        if not npc then return end
        local cc = gui.CC["npc_bag"]
        if not cc or type(cc.indx_id) ~= "table" then return end
        for id in pairs(cc.indx_id) do
            local obj = level.object_by_id(id)
            if obj and can_move(obj, "npc_bag", "actor_bag") then
                gui:Action_Move(obj, "npc_bag")
            end
        end
        gui.update_info = true
    end
end

local function init()
    if first_start then
        add_actions()
        first_start = false
    end
end

local function on_hide()
    gui = nil
end

local function on_show()
    if ui_inventory.GUI and ui_inventory.GUI.mode == "loot" then
        gui = ui_inventory.GUI
        init()
    else
        gui = nil
    end
end

local orig_press   = bind_stalker_ext.on_key_press
local orig_release = bind_stalker_ext.on_key_release

bind_stalker_ext.on_key_press = function(_, key)
    if gui then
        if key == key_v() then gui.StackToNPC() end
        if key == key_b() then gui.StackToPlayer() end
    end
    return orig_press and orig_press(_, key)
end

bind_stalker_ext.on_key_release = function(_, key)
    return orig_release and orig_release(_, key)
end

RegisterScriptCallback("GUI_on_hide", on_hide)
RegisterScriptCallback("GUI_on_show", on_show)
